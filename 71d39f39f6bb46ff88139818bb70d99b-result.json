{
  "uuid": "54f3cfaa6ce54f81bc18e0335ea6a749",
  "historyId": "Show a product",
  "fullName": "Show a product",
  "labels": [
    {
      "name": "thread",
      "value": "NonParallelWorker"
    },
    {
      "name": "host",
      "value": "NERSHARIG"
    },
    {
      "name": "feature",
      "value": "ShowAProduct"
    },
    {
      "name": "tag",
      "value": "get"
    },
    {
      "name": "tag",
      "value": "mod3"
    }
  ],
  "links": [],
  "name": "Show a product",
  "status": "failed",
  "statusDetails": {
    "known": false,
    "muted": false,
    "flaky": false,
    "message": "  Expected: OK\r\n  But was:  BadRequest\r\n",
    "trace": "NUnit.Framework.AssertionException:   Expected: OK\r\n  But was:  BadRequest\r\n\r\n   at NUnit.Framework.Assert.ReportFailure(String message)\r\n   at NUnit.Framework.Assert.ReportFailure(ConstraintResult result, String message, Object[] args)\r\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression, String message, Object[] args)\r\n   at NUnit.Framework.Assert.That[TActual](TActual actual, IResolveConstraint expression)\r\n   at spectflow_ci_project.ShowAProductStepDefinitions.ThenIExpectToReceiveAValidResponseWithStatusCodeOKProductId() in D:\\TRAINING\\MOJIX\\BOOTCAMP\\resources\\spectflow-ci_project\\spectflow-ci_project\\ShowAProductStepDefinitions.cs:line 28\r\n   at TechTalk.SpecFlow.Bindings.BindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\r\n   at Allure.SpecFlowPlugin.AllureBindingInvoker.InvokeBinding(IBinding binding, IContextManager contextManager, Object[] arguments, ITestTracer testTracer, TimeSpan& duration)\r\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStepMatch(BindingMatch match, Object[] arguments, TimeSpan& duration)\r\n   at TechTalk.SpecFlow.Infrastructure.TestExecutionEngine.ExecuteStep(IContextManager contextManager, StepInstance stepInstance)"
  },
  "stage": "finished",
  "steps": [
    {
      "name": "When  I send a GET request a product for ID 19",
      "status": "passed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1686166748595,
      "stop": 1686166748962
    },
    {
      "name": "Then  I expect to receive a valid response with status code OK productId",
      "status": "failed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1686166748962,
      "stop": 1686166748989
    },
    {
      "name": "And  the response body contains the product details for ID 19",
      "status": "skipped",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1686166748990,
      "stop": 1686166748991
    }
  ],
  "attachments": [],
  "parameters": [],
  "start": 1686166748590,
  "stop": 1686166748994
}